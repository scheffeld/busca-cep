{
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "securityDefinitions": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "A aplicação utiliza um JWT para autorizar o acesso aos recursos. Insira 'Bearer validToken' na autorização e substitua 'validToken' pelo token gerado."
      }
    },
    "host": "https://busca-cep-bot.herokuapp.com",
    "basePath": "/api/v1",
    "info": {
      "version": "1.0.0",
      "title": "Busca CEP - RestFul API",
      "description": "A API tem como objetivo retornar os dados de correspondência apartir de um CEP. Essa é uma API RestFul, ou seja, segue os padrãos Rest de design de APIs.",
      "contact": {
        "name": "Roger Andretto Scheffeld",
        "url": "https://github.com/scheffeld",
        "email": "rscheffeld@gmail.com"
      },
      "license": {
        "name": "MIT",
        "url": "http://opensource.org/licenses/MIT"
      }
    },
    "paths": {
      "/token": {
        "get": {
          "summary": "Gera um JWT válido.",
          "tags": [
            "Token"
          ],
          "description": "A rota '/token' gera um token válido, no formato JWT, para acessar os recursos da aplicação.",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Token gerado com sucesso.",
              "schema": {
                "type": "object",
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJwYXNzIjoiYWRtaW4iLCJpYXQiOjE1OTkxODQyNTEsImV4cCI6MTU5OTE4NTE1MX0.hgFk8xVN1sOajdnS_3nuU5umKFFb90yKzYsTKWf_NEU"
                }
              }
            }
          }
        }
      },
      "/ping": {
        "get": {
          "summary": "Executa um ping na aplicação.",
          "tags": [
            "Ping"
          ],
          "description": "A rota '/ping' faz uma requisição para verificar se a aplicação está operando.",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Aplicação está pingando.",
              "schema": {
                "type": "object",
                "example": {
                  "ping": "pong"
                }
              }
            }
          }
        }
      },
      "/busca-cep": {
        "post": {
          "summary": "Retorna os dados de correspondencia.",
          "tags": [
            "Busca CEP"
          ],
          "security": [
            {
              "ApiKeyAuth": [
                "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJwYXNzIjoiYWRtaW4iLCJpYXQiOjE1OTkxODYxMzEsImV4cCI6MTU5OTE4NzAzMX0.dlCiHC5BV2VvuRuVuHI5AZpOHZSysMLglDz72QIlXwo"
              ]
            }
          ],
          "description": "Retorna os dados de correspondencia apartir de um CEP válido informado. Caso a aplicação não encontre endereço com o CEP informado, o ultimo digito é substituido por 0 até que retorne um endereço.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "cep_",
              "schema": {
                "type": "object",
                "properties": {
                  "cep": {
                    "type": "string",
                    "example": "14401226"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Busca efetuada com sucesso",
              "schema": {
                "type": "object",
                "example": {
                  "rua": "Rua Espírito Santo",
                  "bairro": "Vila Aparecida",
                  "cidade": "Franca",
                  "uf": "SP"
                }
              }
            },
            "400": {
              "description": "Requisição Inválida",
              "schema": {
                "type": "object",
                "example": {
                  "error": "CEP inválido."
                }
              }
            },
            "401": {
              "description": "Não autorizado.",
              "schema": {
                "type": "string",
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    }
  }